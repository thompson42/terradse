---

# Host connection
#-------------------------------------------------------------------------------
#   - connection type: SSH
#   - default SSH user for ctool: automaton
#   - default user for openstack/AWS: ubuntu
#
ansible_connection: ssh
ansible_user: "{{ my_ansible_user | default('ubuntu') }}"                                                   #EDIT: Change from default e.g. ec2-user, ubuntu, automaton etc

# DSE Superuser account
#-------------------------------------------------------------------------------
# NOTE: the default account username/password are public knowledge
default_super_user_account: cassandra
default_super_user_password: cassandra

secure_super_user_account: "{{ my_secure_super_user_account | default('TestAdmin') }}"                      #EDIT: Change from default (Use ansible-vault)
secure_super_user_password: "{{ my_secure_super_user_password | default('TestAdminPassword') }}"            #EDIT: Change from default (Use ansible-vault)

# File permissions
# Don't confuse cassandra OS account with cassandra internal superuser account
#-------------------------------------------------------------------------------
localhost_owner: "{{lookup('env','USER')}}"
localhost_group: "{{lookup('env','USER')}}"

cassandra_owner: cassandra
cassandra_group: cassandra

opscenter_owner: opscenter
opscenter_group: opscenter

# Datastax repository 
#-------------------------------------------------------------------------------
dse_repo_file: /etc/apt/sources.list.d/datastax.sources.list

#User name and password to download DSE (DataStax Academy)
dse_repo_email: "{{ my_dse_repo_email | default('xxx') }}"                                                  #EDIT: Change from default (Use ansible-vault)
dse_repo_password: "{{ my_dse_repo_password | default('xxx') }}"                                            #EDIT: Change from default (Use ansible-vault)

# Target/Current DSE verson
dse_major_version: 5.1                                                          #used to choose the correct configuration templates
dse_ver_target:  5.1.7-1                                                       #requires the [-1] on the end of the version
opsc_ver_target: 6.5.0                                                          #opsc 6.5 is compatible with DSE 5.0,5.1,6.0

# DSE directory locations 
#-------------------------------------------------------------------------------
dse_config_dir: /etc/dse
dse_default_dir: /etc/default
dse_syslog_dir: /var/log/cassandra

# Key cassandra.yaml settings
#-------------------------------------------------------------------------------
# default vnode token_num setting for DSE Core/Cassandra and Graph/Graph
vnode_token_num: 256

# default vnode token_num setting for DSE Search/Solr and Analytics/Spark
vnode_token_num_solr: 32
vnode_token_num_spark: 32

# data directories - need to modify these paths to reflect the mount point of 
# your EBS drive/s OR ephemeral stores
data_file_directories:  "{{ my_data_file_directories | default('/var/lib/cassandra/data') }}"               #EDIT: Change from default
hints_directory: "{{ my_hints_directory | default('/var/lib/cassandra/hints') }}"                           #EDIT: Change from default
commitlog_directory: "{{ my_commitlog_directory | default('/var/lib/cassandra/commitlog') }}"               #EDIT: Change from default
saved_caches_directory: "{{ my_saved_caches_directory | default('/var/lib/cassandra/saved_caches') }}"      #EDIT: Change from default

# Storage settings
#-------------------------------------------------------------------------------
# consumed in role: dse_osparm_ssd_change
is_ssd_storage: "{{ my_is_ssd_storage | default(false) }}"                                                  #EDIT: Change to [true] if using ephemeral SSDs for DSE storage

# Block device string for the attached EBS or ephemeral SSD volume for DSE data
device_string: "{{ my_device_string | default('xxxx') }}"                                                   #EDIT: Change to /sys/block/<xxxx> for this SSD if using ephemeral SSDs for DSE storage 

# Key Spark settings
#-------------------------------------------------------------------------------
activate_dsefs: "{{ my_activate_dsefs | default(false) }}"                                                  #EDIT: Change from default
dsefs_data_file_directory: "{{ my_dsefs_data_file_directory | default('/var/lib/dsefs/data') }}"            #EDIT: Change from default
activate_alwaysonsql: "{{ my_activate_alwaysonsql | default(false) }}"                                      #EDIT: Requires DSE 6.0+
activate_alwaysonsql_ssl: "{{ my_activate_alwaysonsql_ssl | default(false) }}"                              #EDIT: Requires DSE 6.0+


# Cleanup of worker app data - Currently not used in any playbook (untested)
spark_worker_cleanup_enabled: true
spark_worker_cleanup_interval: 1800                                             # Check every 30 minutes for worker logs to cleanup
spark_worker_cleanup_appDataTtl: 604800                                         # Retain worker app data for x seconds (604800=7 days)

# Configure rotation of Spark worker logs in spark-daemon-defaults.conf
spark_executor_logs_rolling_maxRetainedFiles: 3
spark_executor_logs_rolling_strategy: size
spark_executor_logs_rolling_maxSize: 50000                                      # bytes


# Key Opscenter settings
#-------------------------------------------------------------------------------
opsc_web_port: 8443 #Opsc webserver AND API (unsecured 8888, secured 8443)

opsc_config: /etc/opscenter/opscenterd.conf
opsc_ssl_dir: /var/lib/opscenter/ssl

opscenter_username: admin
default_opscenter_password: admin
secure_opscenter_password: "{{ my_secure_opscenter_password | default('opscenter_password_here') }}"        #EDIT: Change from default (Use ansible-vault)

# Key JMX settings
#-------------------------------------------------------------------------------
jmx_username: "{{ my_jmx_username | default('jmx_username') }}"                                             #EDIT: Change from default (Use ansible-vault)
jmx_password: "{{ my_jmx_password | default('jmx_password') }}"                                             #EDIT: Change from default (Use ansible-vault)

# path fix for JMX/JAAS/cassandra-env.sh
jaas_path: "{{dse_config_dir}}/cassandra/cassandra-jaas.config"

# Key jvm.options settings
#-------------------------------------------------------------------------------
# JVM HEAP used by DSE
#TODO: 
#dsecore/spark/graph should be 20G
#solr should be 32GB (on larger nodes)
heap_xms: "{{ my_heap_xms | default('4G') }}"                                                               #EDIT: Change from default
heap_xmx: "{{ my_heap_xmx | default('4G') }}"                                                               #EDIT: Change from default

# Key role: security_dse_unified_authentication (info only):
#-------------------------------------------------------------------------------
#DCs < 3x nodes use an RF=1
#DCs < 9x nodes use an RF=3
#DCs > 9x nodes use an RF=5
# For the above RF settings see the matching ansible module:
# library/cassandra_security_keyspaces.py

# Encryption settings for truststores / keystores
#-------------------------------------------------------------------------------
# Make sure the SSL certificates, keystores, truststores are readable by the user 
# who runs opscenter / cassandra on target nodes
security_owner: cassandra
security_group: cassandra

# Cluster security settings set by server_encryption_options 
# and client_encryption_options in cassandra.yaml
cluster_keystore_path: "{{ my_cluster_keystore_path | default( dse_config_dir + '/keystore.jks') }}"
cluster_keystore_password: "{{ my_cluster_keystore_password | default('cluster_keystore_password') }}"                  #EDIT: Change from default (Use ansible-vault) WARNING: only use letters and numbers, chars like [&] break xml configs (e.g. /etc/dse/hadoop2-client/dse-core-default.xml)
cluster_truststore_path: "{{ my_cluster_truststore_path | default(dse_config_dir + '/truststore.jks') }}"
cluster_truststore_password: "{{ my_cluster_truststore_password | default('cluster_keystore_password') }}"              #EDIT: Change from default (Use ansible-vault) WARNING: only use letters and numbers, chars like [&] break xml configs (e.g. /etc/dse/hadoop2-client/dse-core-default.xml)
 
# Root certificate
#-------------------------------------------------------------------------------
# The certs, .truststore and .keystores are created on the ansible 
# controller node in the directory: ssl_certs_path
is_self_signed_root_cert: "{{ my_is_self_signed_root_cert | default(true) }}"                                           #EDIT: Change to [false] if CA certs
is_wildcard_cert: "{{ my_is_wildcard_cert | default(false) }}"
etc_hosts_file_configure: "{{ my_etc_hosts_file_configure | default(false) }}"                                          #EDIT: Change if CA certs AND no DNS server CN entries (CN name will be added to /etc/hosts)

# Not truely the CN, CN will be dynamically generated off each node's hostname.
# NOTE: Use base domain without the * for wildcard certs (is_wildcard_cert), in the case
# of is_self_signed_root_cert, a '*.' will be prepended to the common name
ssl_certs_common_name: "{{ my_ssl_certs_common_name | default('SelfSignRootCA') }}"                                     #EDIT: Change from default if WILDCARD CA certs e.g [mysite.net]

ssl_cluster_name: "{{ my_ssl_cluster_name | default('Test Cluster') }}"             #OU                                 #EDIT: Change from default if CA certs
ssl_certs_organization: "{{ my_ssl_certs_organization | default('Datastax') }}"     #O                                  #EDIT: Change from default if CA certs
ssl_certs_country: "{{ my_ssl_certs_country | default('US') }}"                     #C                                  #EDIT: Change from default if CA certs

# must be an account and group available on localhost
ssl_certs_path_owner: "{{localhost_owner}}"
ssl_certs_path_group: "{{localhost_group}}"

ssl_certs_root_directory: "{{ my_ssl_certs_root_directory | default('/etc/ssl') }}"                                     #NOTE: Change to your home directory if running ansible as a non-privileged user.
ssl_certs_path: "{{ssl_certs_root_directory}}/{{ssl_certs_common_name}}"                                                #NOTE: If CA certs MUST manually create this directory as [mysite.net] on ansible host first time and deploy your [mysite.net.pem] and [mysite.net.key] CA cert.
                                                                                                                        #ALSO: The CA file MUST contain all its chain in strict reverse order: Signing Intermediate CA first and Root CA last.
ssl_certs_key_size: "2048"
ssl_certs_days: "365"

#Audit logging
#-------------------------------------------------------------------------------
#AUTH	Logs login events.
#DML	Logs insert, update, delete and other data manipulation language (DML) events.
#DDL	Logs object and role create, alter, drop, and other data definition language (DDL) events.
#DCL	Logs grant, revoke, create role, drop role, and list roles events.
#QUERY	Logs all queries.
#ERROR  Logs login errors.

#Actual audit logs are stored in: dse_syslog_dir/audit/audit.log
#Log Storage location is controlled by: /etc/dse/cassandra/logback.xml section: [audit log]

audit_logging_options_enabled: "{{ my_audit_logging_options_enabled | default(false) }}"                                #EDIT: Change to [true] to activate
audit_logging_options_logger: SLF4JAuditWriter
audit_logging_options_included_categories: AUTH,DML,DDL,DCL

# Backups
#-------------------------------------------------------------------------------
# Can only run AFTER schema creation (need keyspace names for backup list)
# For fine grain control directly edit /roles/opsc_services_configure/templates/
is_automated_backup: "{{ my_is_automated_backup | default(false) }}"                                                    #EDIT: Change from false if backups required
backup_path: "{{ my_backup_path | default('/mnt/backups') }}"                                                           #EDIT: Should be located off node to be of any use
backup_keyspace_list: "{{ my_backup_keyspace_list | default('keyspace1,keyspace2,keyspace3') }}"                        #EDIT: list keyspaces to backup, empty list means ALL keyspaces

# LDAP Configuration (from MS Active Directory example)
# See: https://support.datastax.com/hc/en-us/articles/115005881643-Setting-Up-LDAP-Authentication-and-Authorization-DSE-5-x
#-------------------------------------------------------------------------------
is_ldap_authentication: "{{ my_is_ldap_authentication | default(false) }}"
is_ldap_role_management: "{{ my_is_ldap_role_management | default(false) }}"

#ldap_options in dse.yaml file:
ldap_server_host: "{{ my_ldap_server_host | default('win2012ad_server.mycompany.lan') }}"
ldap_server_port: "{{ my_ldap_server_port | default('389') }}"
ldap_search_dn: "{{ my_ldap_search_dn | default('cn=lookup_user,cn=users,dc=win2012domain,dc=mycompany,dc=lan') }}"
ldap_search_password: "{{ my_ldap_search_password | default('ldap_search_password') }}"
ldap_use_ssl: "{{ my_ldap_use_ssl | default(false) }}"
ldap_use_tls: "{{ my_ldap_use_tls | default(false) }}"
ldap_truststore_path: "{{ my_ldap_truststore_path | default('path/to/truststore') }}"
ldap_truststore_password: "{{ my_ldap_truststore_password| default('ldap_truststore_password') }}"
ldap_truststore_type: "{{ my_ldap_truststore_type | default('jks') }}"
ldap_user_search_base: "{{ my_ldap_user_search_base | default('cn=users,dc=win2012domain,dc=mycompany,dc=lan') }}"
ldap_user_search_filter: "{{ my_ldap_user_search_filter | default('(sAMAccountName={0})') }}"
ldap_credentials_validity_in_ms: "{{ my_ldap_credentials_validity_in_ms | default('0') }}"
ldap_search_validity_in_seconds: "{{ my_ldap_search_validity_in_seconds | default('0') }}"

#ldap_options.connection_pool in dse.yaml file:
ldap_connection_pool_max_active: "{{ my_ldap_connection_pool_max_active | default('8') }}"
ldap_connection_pool_max_idle: "{{ my_ldap_connection_pool_max_idle | default('8') }}"

ldap_user_memberof_attribute: "{{ my_ldap_user_memberof_attribute | default('memberOf') }}"
ldap_group_search_type: "{{ my_ldap_group_search_type | default('memberof_search') }}"
ldap_group_name_attribute: "{{ my_ldap_group_name_attribute | default('cn') }}"

# Additional unimplemented fields and/or options:
# group_search_type: directory_search
# group_search_base: cn=users,dc=qawin201,dc=lan
# group_search_filter: (member=cn={0},cn=users,dc=qawin2008,dc=datastax,dc=lan)




