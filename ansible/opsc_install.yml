---

# Exit process immediately if the Cassandra data directory exists on any node (don't want to overwrite a running system !)
- hosts: opsc_dsecore
  any_errors_fatal: true
  become: true
  become_method: sudo
  roles:
  - { role: dse_test_for_data_directory }

# Install DSE Core/Cassandra on all OPSC DSECore nodes
- hosts: opsc_dsecore
  any_errors_fatal: true
  become: true
  become_method: sudo
  roles:
    - { role: datastax_pkg }
    - { role: java8_inst }
    - { role: dse_osparam_change }
    - { role: dse_osparam_ssd_change, when: is_ssd_storage | bool }
    - { role: dse_common }
    - { role: dse_instbin }
    - { role: dse_updcfg }
    - { role: dse_set_heap }
  vars:
    add_datacenter: false
    

# Install OpsCenter server (Presumes all OPSC DSECore servers are down)
- hosts: opsc_srv
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks: 

  - name: Install DSE OpsCenter
    apt:
      name: "opscenter={{opsc_ver_target}}"
      state: present
      update_cache: yes


# Install and configure datastax-agent on DSE cluster nodes
- hosts: dse
  any_errors_fatal: true
  become: true
  become_method: sudo
  tasks:
  
    - name: Install datastax-agent on DSE nodes
      apt:
        name: "datastax-agent={{opsc_ver_target}}"
        state: present
        update_cache: yes
        
    - name: Configure stomp_address
      lineinfile:
        name: "/var/lib/datastax-agent/conf/address.yaml"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '# stomp_interface', line: "stomp_interface: {{ groups['opsc_srv'][0] }}" }

